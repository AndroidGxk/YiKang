package com.example.sqlite.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.yikangcheng.admin.yikang.bean.LoginBean;
import com.yikangcheng.admin.yikang.bean.UserDetailBean;
import com.yikangcheng.admin.yikang.greendao.SoSuoDb;
import com.yikangcheng.admin.yikang.bean.CreatOrderBean;
import com.yikangcheng.admin.yikang.bean.PayBean;

import com.example.sqlite.dao.LoginBeanDao;
import com.example.sqlite.dao.UserDetailBeanDao;
import com.example.sqlite.dao.SoSuoDbDao;
import com.example.sqlite.dao.CreatOrderBeanDao;
import com.example.sqlite.dao.PayBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig loginBeanDaoConfig;
    private final DaoConfig userDetailBeanDaoConfig;
    private final DaoConfig soSuoDbDaoConfig;
    private final DaoConfig creatOrderBeanDaoConfig;
    private final DaoConfig payBeanDaoConfig;

    private final LoginBeanDao loginBeanDao;
    private final UserDetailBeanDao userDetailBeanDao;
    private final SoSuoDbDao soSuoDbDao;
    private final CreatOrderBeanDao creatOrderBeanDao;
    private final PayBeanDao payBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        loginBeanDaoConfig = daoConfigMap.get(LoginBeanDao.class).clone();
        loginBeanDaoConfig.initIdentityScope(type);

        userDetailBeanDaoConfig = daoConfigMap.get(UserDetailBeanDao.class).clone();
        userDetailBeanDaoConfig.initIdentityScope(type);

        soSuoDbDaoConfig = daoConfigMap.get(SoSuoDbDao.class).clone();
        soSuoDbDaoConfig.initIdentityScope(type);

        creatOrderBeanDaoConfig = daoConfigMap.get(CreatOrderBeanDao.class).clone();
        creatOrderBeanDaoConfig.initIdentityScope(type);

        payBeanDaoConfig = daoConfigMap.get(PayBeanDao.class).clone();
        payBeanDaoConfig.initIdentityScope(type);

        loginBeanDao = new LoginBeanDao(loginBeanDaoConfig, this);
        userDetailBeanDao = new UserDetailBeanDao(userDetailBeanDaoConfig, this);
        soSuoDbDao = new SoSuoDbDao(soSuoDbDaoConfig, this);
        creatOrderBeanDao = new CreatOrderBeanDao(creatOrderBeanDaoConfig, this);
        payBeanDao = new PayBeanDao(payBeanDaoConfig, this);

        registerDao(LoginBean.class, loginBeanDao);
        registerDao(UserDetailBean.class, userDetailBeanDao);
        registerDao(SoSuoDb.class, soSuoDbDao);
        registerDao(CreatOrderBean.class, creatOrderBeanDao);
        registerDao(PayBean.class, payBeanDao);
    }
    
    public void clear() {
        loginBeanDaoConfig.clearIdentityScope();
        userDetailBeanDaoConfig.clearIdentityScope();
        soSuoDbDaoConfig.clearIdentityScope();
        creatOrderBeanDaoConfig.clearIdentityScope();
        payBeanDaoConfig.clearIdentityScope();
    }

    public LoginBeanDao getLoginBeanDao() {
        return loginBeanDao;
    }

    public UserDetailBeanDao getUserDetailBeanDao() {
        return userDetailBeanDao;
    }

    public SoSuoDbDao getSoSuoDbDao() {
        return soSuoDbDao;
    }

    public CreatOrderBeanDao getCreatOrderBeanDao() {
        return creatOrderBeanDao;
    }

    public PayBeanDao getPayBeanDao() {
        return payBeanDao;
    }

}
